{
  "lang": "python",
  "username": "",
  "question": {
    "questionId": "1",
    "questionTitle": "Two Sum",
    "titleSlug": "two-sum",
    "questionLink": "https://leetcode.com/problems/two-sum",
    "question": "\u003cp\u003eGiven an array of integers \u003ccode\u003enums\u003c/code\u003e\u0026nbsp;and an integer \u003ccode\u003etarget\u003c/code\u003e, return \u003cem\u003eindices of the two numbers such that they add up to \u003ccode\u003etarget\u003c/code\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003eYou may assume that each input would have \u003cstrong\u003e\u003cem\u003eexactly\u003c/em\u003e one solution\u003c/strong\u003e, and you may not use the \u003cem\u003esame\u003c/em\u003e element twice.\u003c/p\u003e\n\n\u003cp\u003eYou can return the answer in any order.\u003c/p\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong class=\"example\"\u003eExample 1:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e nums = [2,7,11,15], target = 9\n\u003cstrong\u003eOutput:\u003c/strong\u003e [0,1]\n\u003cstrong\u003eExplanation:\u003c/strong\u003e Because nums[0] + nums[1] == 9, we return [0, 1].\n\u003c/pre\u003e\n\n\u003cp\u003e\u003cstrong class=\"example\"\u003eExample 2:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e nums = [3,2,4], target = 6\n\u003cstrong\u003eOutput:\u003c/strong\u003e [1,2]\n\u003c/pre\u003e\n\n\u003cp\u003e\u003cstrong class=\"example\"\u003eExample 3:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e nums = [3,3], target = 6\n\u003cstrong\u003eOutput:\u003c/strong\u003e [0,1]\n\u003c/pre\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConstraints:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e\u003ccode\u003e2 \u0026lt;= nums.length \u0026lt;= 10\u003csup\u003e4\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e-10\u003csup\u003e9\u003c/sup\u003e \u0026lt;= nums[i] \u0026lt;= 10\u003csup\u003e9\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e-10\u003csup\u003e9\u003c/sup\u003e \u0026lt;= target \u0026lt;= 10\u003csup\u003e9\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003cstrong\u003eOnly one valid answer exists.\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cstrong\u003eFollow-up:\u0026nbsp;\u003c/strong\u003eCan you come up with an algorithm that is less than \u003ccode\u003eO(n\u003csup\u003e2\u003c/sup\u003e)\u003c/code\u003e\u003cfont face=\"monospace\"\u003e\u0026nbsp;\u003c/font\u003etime complexity?",
    "exampleTestcases": "[2,7,11,15]\n9\n[3,2,4]\n6\n[3,3]\n6",
    "difficulty": "Easy",
    "topicTagsString": "Array, Hash Table"
  },
  "dailyQuestion": {
    "questionId": "407",
    "questionTitle": "Trapping Rain Water II",
    "titleSlug": "trapping-rain-water-ii",
    "questionLink": "https://leetcode.com/problems/trapping-rain-water-ii/",
    "question": "\u003cp\u003eGiven an \u003ccode\u003em x n\u003c/code\u003e integer matrix \u003ccode\u003eheightMap\u003c/code\u003e representing the height of each unit cell in a 2D elevation map, return \u003cem\u003ethe volume of water it can trap after raining\u003c/em\u003e.\u003c/p\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong class=\"example\"\u003eExample 1:\u003c/strong\u003e\u003c/p\u003e\n\u003cimg alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/trap1-3d.jpg\" style=\"width: 361px; height: 321px;\" /\u003e\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e heightMap = [[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]\n\u003cstrong\u003eOutput:\u003c/strong\u003e 4\n\u003cstrong\u003eExplanation:\u003c/strong\u003e After the rain, water is trapped between the blocks.\nWe have two small ponds 1 and 3 units trapped.\nThe total volume of water trapped is 4.\n\u003c/pre\u003e\n\n\u003cp\u003e\u003cstrong class=\"example\"\u003eExample 2:\u003c/strong\u003e\u003c/p\u003e\n\u003cimg alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/trap2-3d.jpg\" style=\"width: 401px; height: 321px;\" /\u003e\n\u003cpre\u003e\n\u003cstrong\u003eInput:\u003c/strong\u003e heightMap = [[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]\n\u003cstrong\u003eOutput:\u003c/strong\u003e 10\n\u003c/pre\u003e\n\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConstraints:\u003c/strong\u003e\u003c/p\u003e\n\n\u003cul\u003e\n\t\u003cli\u003e\u003ccode\u003em == heightMap.length\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003en == heightMap[i].length\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e1 \u0026lt;= m, n \u0026lt;= 200\u003c/code\u003e\u003c/li\u003e\n\t\u003cli\u003e\u003ccode\u003e0 \u0026lt;= heightMap[i][j] \u0026lt;= 2 * 10\u003csup\u003e4\u003c/sup\u003e\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n",
    "exampleTestcases": "[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]\n[[3,3,3,3,3],[3,2,2,2,3],[3,2,1,2,3],[3,2,2,2,3],[3,3,3,3,3]]",
    "difficulty": "Hard",
    "topicTagsString": "Array, Breadth-First Search, Heap (Priority Queue), Matrix"
  },
  "todayDate": "2025-01-19T11:33:51.130637-07:00"
}